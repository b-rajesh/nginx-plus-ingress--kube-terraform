# This CRD support for Terraform is still in beta - https://www.hashicorp.com/blog/deploy-any-resource-with-the-new-kubernetes-provider-for-hashicorp-terraform/ - hence we still stick to YAML execution through kubectl

apiVersion: k8s.nginx.org/v1
kind: VirtualServer
metadata:
  name: weather-api-vs
  namespace: nginx-plus-ingress-ns
spec:
  ingressClassName: edgeproxy
  http-snippets: |
    limit_req_zone $binary_remote_addr zone=ip_address:10m rate=3r/m;
    gunzip on; # Decompress IdP responses if necessary
    auth_jwt_claim_set $idp_issuer          iss;
    auth_jwt_claim_set $customer_id         sub;
    auth_jwt_claim_set $audience         aud;
    auth_jwt_claim_set $weather_role        permissions;
    proxy_cache_path /var/cache/nginx/jwk levels=1 keys_zone=jwk:1m max_size=10m;
    map $weather_role $isAdmin {
        "admin" 1;
        default 0;
    }
    # Verify the aud claim whether the token is issued to the client for differnt resource access.
    map $audience $isAudienceAllowed { 
        "https://rajeshbavan.ddns.net/v1/partner" 1;
        default                    0;
    }
    map $idp_issuer $isValidIssuer {
        "https://brajesh.au.auth0.com/" 1;
        default                                                          0;
    }
  host: localhost
  policies:
    - name: allow-anyhost
      namespace: nginx-plus-ingress-ns
  routes:
  - path: /weather
    location-snippets: |
      # HTTP Method level authorization
      limit_except GET { deny all;}
      error_page 403 = @405;
      if ( $isAdmin = 0 ) {
        return 403; # Forbidden
      }
    route: microservice-namespace/weather-service-vsr
  - path: /helloworld
    route: microservice-namespace/echo-service-vsr
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServerRoute
metadata:
  name: weather-service-vsr
  namespace: microservice-namespace
spec:
  host: localhost
  upstreams:
  - name: weather-service-upstream 
    service: weather-service
    port: 3000
    lb-method: round_robin
    max-fails: 1
    max-conns: 32
    keepalive: 32
    connect-timeout: 30s
    read-timeout: 30s
    send-timeout: 30s
    next-upstream: "error timeout non_idempotent"
    next-upstream-timeout: 5s
    next-upstream-tries: 10
    client-max-body-size: 1m
  subroutes:
  - path: /weather
    action:
      pass: weather-service-upstream 
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServerRoute
metadata:
  name: echo-service-vsr
  namespace: microservice-namespace
spec:
  host: localhost
  upstreams:
  - name: echo-service-upstream 
    service: echo-service
    port: 8080
    lb-method: round_robin
    max-fails: 1
    max-conns: 32
    keepalive: 32
    connect-timeout: 30s
    read-timeout: 30s
    send-timeout: 30s
    next-upstream: "error timeout non_idempotent"
    next-upstream-timeout: 5s
    next-upstream-tries: 10
    client-max-body-size: 1m
  subroutes:
  - path: /helloworld
    action:
      pass: echo-service-upstream 
---
